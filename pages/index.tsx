import Head from 'next/head'
import Image from 'next/image'
import meImage from '../public/images/me.png'
import picOne from '../public/images/pic1.png'
import picTwo from '../public/images/pic2.png'
import picThree from '../public/images/pic3.png'

import { datoCmsQuery } from '../src/querys/datoCmsQuery';
import datoCmsClient from '../dato-cms';

import { githubQuery } from '../src/querys/gitHubQuery';
import gitHubClient from '../github';

import { HomeStyle } from '../styles/styles';

import Layout from '../src/components/Layout';
import { Oswald } from '@next/font/google'
import Project from '../src/components/Project';


const inter = Oswald({ subsets: ['latin'] })

interface ProjectsProps {
  allProjects: {
    allProjects: [],
  };
  pinnedRepoItems: [];
}

export default function Home({ allProjects, pinnedRepoItems } : ProjectsProps) {

  console.log('All Projects', allProjects);
  console.log('GitHub Repos', pinnedRepoItems);

  return (
    <>
      <Head>
        <title>Aimee Tacchi Portfolio 2023</title>
        <meta name="description" content="Aimee Tacchi Portfolio 2023 Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
      <HomeStyle>


     
        <div className="home-welcome">
          <div className="flex-container">

            <div className="home-intro">
              <h2 className={`home-title ${inter.className}`}>Hello I&rsquo;m Aimee.</h2>
              <p className={inter.className}>I&rsquo;m a React developer, I build responsive websites &amp; applications</p>
              <small className={inter.className}>Go down to see some of my latest work lol</small>
              
            </div>

            <div className="home-picture">
              <Image src={picOne} alt='aimee tacchi'/>
              <Image src={picThree} alt="developer laptop" />
              <Image src={picTwo} alt="developer laptop" />
            </div>

          </div>
        </div>



        <div className="flex-container">
            {
              allProjects && allProjects.allProjects.map((project: any) => (
                project.recentWork ?
                  <Project key={project.id} project={project} /> : null
                
              ))
            }
          </div>
      </HomeStyle>
      </Layout>
    </>
  )
}





export async function getStaticProps() {

    const allProjects = await datoCmsClient.request(datoCmsQuery);
    const gitHubData = await gitHubClient.request(githubQuery)

    const { user } = gitHubData;
    const pinnedRepoItems = user.pinnedItems.edges.map((edge: any) => edge.node);

    return {
        props: {allProjects, pinnedRepoItems},
        revalidate: 1,
    };
}
