// pages/projects/[slug].tsx
import { GetStaticPaths } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { FaArrowRight } from 'react-icons/fa';
import datoCmsClient from '../../dato-cms';
import Layout from '../../src/components/Layout';
import H1 from '../../src/components/UI/Typography/H1';
import P from '../../src/components/UI/Typography/Paragraph';
import { datoCmsQuery } from '../../src/querys/datoCmsQuery';

interface ProjectPageProps {
    project: {
      name: string,
      description: string,
      link: string,
      tech: string,
      coverImage: {},
      date: string,
    };
}

export default function ProjectPage({ project }: ProjectPageProps) {
    console.log('project in project page', project);
    const router = useRouter();

    if (router.isFallback) {
      return <div>Loading...</div>;
    }
  
    if (!project) {
      // Handle the case when project is undefined
      return <div>Project not found</div>;
    }

  return (
    <>
    <Head>
      <title>About | Aimee Tacchi Portfolio 2023</title>
      <meta name="description" content="Aimee Tacchi Portfolio 2023 Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>

    <Layout>
       <div className="m-10">
         
         <H1>{project.name}</H1>
         
       </div>
    </Layout>
    </>
  );
};

export const getStaticPaths: GetStaticPaths = async () => {
    const projects = await datoCmsClient.request(datoCmsQuery);
   
    const paths = projects.allProjects.map((project: any) => ({
      params: { slug: project.slug.toString() },
    }));

    return {
      paths,
      fallback: true,
      
    };
};

export async function getStaticProps({ params }: any) {
    
    console.log('params', params)
    const projects = await datoCmsClient.request(datoCmsQuery);

    const project = projects.allProjects.find(
        (project: any) => project.slug === params?.slug
    );

   console.log('project in get staticProps', project);

  return {
    props: {
      project:  project || null,
    },
  };
};

